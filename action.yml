name: Test and export coverage
description: An action to run pytest and export code coverage.
inputs:
  report-path:
    description: 'Path to directory containing the coverage reports'
    required: false
    default: './'
  deploy-pages:
    description: 'Flag to deploy coverage report to GitHub Pages'
    required: false
    default: 'false'

  coverage-gist-token:
    description: 'Token for the Gist to update the coverage badge'
    required: false
    default: ''

  coverage-gist-id:
    description: 'Gist ID for the coverage badge'
    required: false
    default: ''

  min-color-range:
    description: 'Minimum color range for coverage badge'
    required: false
    default: '50'

  max-color-range:
    description: 'Maximum color range for coverage badge'
    required: false
    default: '90'

outputs:
  total_coverage:
    description: Total test coverage in percentage
    value: ${{ steps.collect-total-coverage.outputs.total_coverage }}

runs:
  using: "composite"
  steps:
    - name: Collect total coverage
      id: collect-total-coverage
      run: |
        export REPORTPATH=${{ inputs.report-path }}
        export TOTAL_COVERAGE=$(jq -r .totals.percent_covered_display $REPORTPATH/coverage.json)
        echo "total_coverage=$TOTAL_COVERAGE" >> $GITHUB_OUTPUT
      shell: bash
    
    - name: Make coverage badge
      if: ${{ inputs.coverage-gist-token }} != '' && ${{ inputs.coverage-gist-id }} != ''
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ inputs.coverage-gist-token }}
        gistID: ${{ inputs.coverage-gist-id }}
        filename: coverage.json
        label: Test coverage
        message: ${{ steps.collect-total-coverage.outputs.total_coverage }}
        minColorRange: ${{ inputs.min-color-range }}
        maxColorRange: ${{ inputs.max-color-range }}

    - name: Fix permissions
      if: ${{ inputs.deploy-pages }} == 'true'
      run: |
        chmod -c -R +rX "htmlcov" | while read line; do
          echo "::warning title=Invalid file permissions automatically fixed::$line"
        done
      shell: bash
      
    - name: Upload coverage report as artifact
      if: ${{ inputs.deploy-pages }} == 'true'
      uses: actions/upload-pages-artifact@v3
      with:
        name: github-pages
        path: htmlcov
